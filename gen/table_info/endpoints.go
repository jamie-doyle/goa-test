// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// TableInfo endpoints
//
// Command:
// $ goa gen github.com/jamie-doyle/goa-test/design

package tableinfo

import (
	"context"

	goa "goa.design/goa"
)

// Endpoints wraps the "TableInfo" service endpoints.
type Endpoints struct {
	GetInfo goa.Endpoint
}

// NewEndpoints wraps the methods of the "TableInfo" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		GetInfo: NewGetInfoEndpoint(s),
	}
}

// Use applies the given middleware to all the "TableInfo" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.GetInfo = m(e.GetInfo)
}

// NewGetInfoEndpoint returns an endpoint function that calls the method
// "get_info" of service "TableInfo".
func NewGetInfoEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetInfoPayload)
		res, err := s.GetInfo(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedTablepayload(res, "default")
		return vres, nil
	}
}
