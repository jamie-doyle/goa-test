// Code generated by protoc-gen-go. DO NOT EDIT.
// source: table_info.proto

package table_infopb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetInfoRequest struct {
	// Table name
	TableName            string   `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoRequest) Reset()         { *m = GetInfoRequest{} }
func (m *GetInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetInfoRequest) ProtoMessage()    {}
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d2f749ef08add34, []int{0}
}

func (m *GetInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoRequest.Unmarshal(m, b)
}
func (m *GetInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoRequest.Merge(m, src)
}
func (m *GetInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetInfoRequest.Size(m)
}
func (m *GetInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoRequest proto.InternalMessageInfo

func (m *GetInfoRequest) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

type GetInfoResponse struct {
	// Describes the table being returned
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// A table ID
	TableId              string   `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoResponse) Reset()         { *m = GetInfoResponse{} }
func (m *GetInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetInfoResponse) ProtoMessage()    {}
func (*GetInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d2f749ef08add34, []int{1}
}

func (m *GetInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoResponse.Unmarshal(m, b)
}
func (m *GetInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoResponse.Merge(m, src)
}
func (m *GetInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetInfoResponse.Size(m)
}
func (m *GetInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoResponse proto.InternalMessageInfo

func (m *GetInfoResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GetInfoResponse) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

func init() {
	proto.RegisterType((*GetInfoRequest)(nil), "table_info.GetInfoRequest")
	proto.RegisterType((*GetInfoResponse)(nil), "table_info.GetInfoResponse")
}

func init() { proto.RegisterFile("table_info.proto", fileDescriptor_6d2f749ef08add34) }

var fileDescriptor_6d2f749ef08add34 = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x49, 0x4c, 0xca,
	0x49, 0x8d, 0xcf, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x88,
	0x28, 0xe9, 0x73, 0xf1, 0xb9, 0xa7, 0x96, 0x78, 0xe6, 0xa5, 0xe5, 0x07, 0xa5, 0x16, 0x96, 0xa6,
	0x16, 0x97, 0x08, 0xc9, 0x72, 0x41, 0xe5, 0xf3, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35,
	0x38, 0x83, 0x38, 0xc1, 0x22, 0x7e, 0x89, 0xb9, 0xa9, 0x4a, 0x7e, 0x5c, 0xfc, 0x70, 0x0d, 0xc5,
	0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x0a, 0x5c, 0xdc, 0x29, 0xa9, 0xc5, 0xc9, 0x45, 0x99, 0x05,
	0x25, 0x99, 0xf9, 0x79, 0x12, 0xcc, 0x60, 0x2d, 0xc8, 0x42, 0x42, 0x92, 0x5c, 0x1c, 0x50, 0x3b,
	0x53, 0xa0, 0x26, 0xb2, 0x83, 0xf9, 0x9e, 0x29, 0x46, 0xfe, 0x5c, 0x9c, 0x21, 0x60, 0x66, 0x5e,
	0x5a, 0xbe, 0x90, 0x13, 0x17, 0x3b, 0xd4, 0x70, 0x21, 0x29, 0x3d, 0x24, 0x77, 0xa3, 0x3a, 0x51,
	0x4a, 0x1a, 0xab, 0x1c, 0xc4, 0x35, 0x4e, 0x7c, 0x51, 0x3c, 0x08, 0xd9, 0x82, 0xa4, 0x24, 0x36,
	0xb0, 0xa7, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xde, 0x22, 0x41, 0x06, 0x08, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TableInfoClient is the client API for TableInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TableInfoClient interface {
	// GetInfo implements get_info.
	GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error)
}

type tableInfoClient struct {
	cc *grpc.ClientConn
}

func NewTableInfoClient(cc *grpc.ClientConn) TableInfoClient {
	return &tableInfoClient{cc}
}

func (c *tableInfoClient) GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error) {
	out := new(GetInfoResponse)
	err := c.cc.Invoke(ctx, "/table_info.TableInfo/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TableInfoServer is the server API for TableInfo service.
type TableInfoServer interface {
	// GetInfo implements get_info.
	GetInfo(context.Context, *GetInfoRequest) (*GetInfoResponse, error)
}

// UnimplementedTableInfoServer can be embedded to have forward compatible implementations.
type UnimplementedTableInfoServer struct {
}

func (*UnimplementedTableInfoServer) GetInfo(ctx context.Context, req *GetInfoRequest) (*GetInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfo not implemented")
}

func RegisterTableInfoServer(s *grpc.Server, srv TableInfoServer) {
	s.RegisterService(&_TableInfo_serviceDesc, srv)
}

func _TableInfo_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TableInfoServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/table_info.TableInfo/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TableInfoServer).GetInfo(ctx, req.(*GetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TableInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "table_info.TableInfo",
	HandlerType: (*TableInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo",
			Handler:    _TableInfo_GetInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "table_info.proto",
}
